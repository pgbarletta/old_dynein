pasos = collect(-.9:.05:.9)
npasos = length(pasos)
RT = 0.693

E_a = Array{Float64,1}(undef, npasos)
E_b = Array{Float64,1}(undef, npasos)
E_e = Array{Float64,1}(undef, npasos)
E_f = Array{Float64,1}(undef, npasos)

[ E_a[i] = JUMD.energiaGdteNMA(evals_ab .* 40, andd, pasos[i]) for i in 1:npasos ]
[ E_b[i] = JUMD.energiaGdteNMA(evals_ab .* 40, bndd, pasos[i]) for i in 1:npasos ]
[ E_e[i] = JUMD.energiaGdteNMA(evals_ef .* 40, endd, pasos[i]) for i in 1:npasos ]
[ E_f[i] = JUMD.energiaGdteNMA(evals_ef .* 40, fndd, pasos[i]) for i in 1:npasos ]

plt_u = plot(pasos, E_a, lab = "AcB",
    xticks = -.7:.2:.7, yticks = 0:.2:1.,
    xlims = (-.8, .8), ylims = (0, 1.),
    title = "mono",
    grid = false, guidefont = font(16, "Helvetica"), tickfont = font(11, "Helvetica"),
    yaxis = L"U $[Kcal]$", xaxis = L"Displacement $[\AA]$ ",
    linecolor = Colors.colorant"#a0522d", linewidth = 3)

plot!(pasos, E_b, lab = "AdB",
    linecolor = Colors.colorant"#d64161", linewidth = 3)
plot!(pasos, E_e, lab = "EcF",
    linecolor = Colors.colorant"#feb236", linewidth = 3)
plot!(pasos, E_f, lab = "EdF",
    linecolor = Colors.colorant"#6b5b95", linewidth = 3)

hline!([RT], linecolor = Colors.colorant"black", lab = "")

#########################

bf_t_3fm7 = JUMD.theoretical_bf(modes_3fm7, evals_3fm7)
bf_e_3fm7 = get_exp_bf(joinpath(home, "all/modos/3fm7.pdb"))
gammap = sum(bf_e_3fm7) / sum(bf_t_3fm7)
cor(bf_t_3fm7, bf_e_3fm7)

#######################

plot(bf_t_all .* gammap)


#############

function get_exp_bf(infile::String)::Array{Float64, 1}
    name = 13:16
    tempFactor = 61:66
    bf = Array{Float64, 1}()
    pdb = readlines(infile)

    for i = 1:length(pdb)
        if length(pdb[i]) > tempFactor[2]
            if strip(pdb[i][name]) == "CA"
                push!(bf, parse(Float64, strip(pdb[i][tempFactor])))
            end
        end
    end
    return bf
end
